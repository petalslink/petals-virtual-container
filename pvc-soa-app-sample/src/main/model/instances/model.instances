#
# Copyright (c) 2015 Linagora
#
# This program/library is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 2.1 of the License, or (at your
# option) any later version.
#
# This program/library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
# for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program/library; If not, see <http://www.gnu.org/licenses/>
# for the GNU Lesser General Public License version 2.1.
#
#############################################################################

##########################
# Other resources
##########################
instance of PostgreSQL-VM {
	name: postgresql-vm;
	
	instance of PostgreSQLServer {
		name: postgresql-server;

		instance of ActivitiPgSQLDatabase {
			name: activiti-database;
	
			databaseName: activiti;
			# The database user name must be defined in lower case and '-' is forbidden
			databaseUser: petalsseactiviti;
			databasePwd: PetalsSeActiviti;
		}
	}
}

##########################
# Registry part
##########################
instance of PetalsRegistry-VM {
	name: registry-bootstrap-vm;

	instance of PetalsRegistryMaster {
		name: registry-bootstrap-node;

		# TODO: Why PetalsRegistry must be used ? We should use only 'memberId' (https://github.com/roboconf/roboconf-platform/issues/420)
		PetalsRegistry.memberId: registry-bootstrap-node;
	}
}

instance of PetalsRegistry-VM {
	name: registry-vm-1;

	instance of PetalsRegistrySlave {
		name: registry-node;

		# TODO: Why PetalsRegistry must be used ? We should use only 'memberId' (https://github.com/roboconf/roboconf-platform/issues/420)
		PetalsRegistry.memberId: registry-node-1;
	}
}

##########################
# Container part
##########################
instance of PetalsContainer-VM {
	name: container-bootstrap-vm;

	instance of PetalsContainerBootstrap {
		name: container-bootstrap-node;

		# TODO: Why PetalsContainerBootstrap must be used ? We should use only 'containerId' (https://github.com/roboconf/roboconf-platform/issues/420)
		PetalsContainerBootstrap.containerId: container-bootstrap-node;
		domainName: roboconf-demo;
		subdomainName: roboconf-demo-1;
		
		instance of PetalsSLPostgreSQL {
		    name: petals-sl-postgresql-9.4-1201-jdbc4;
		}
		
		instance of PetalsBCSoap {
		    name: petals-bc-soap;
		    
		    instance of SU-SOAP-VacationServiceConsumer {
			    name: su-SOAP-vacationService-consume;
			}
		
			instance of SU-SOAP-NotificationServiceProvider {
			    name: su-SOAP-notifyVacationService-provide;
			}
		
			instance of SU-SOAP-ArchivingServiceProvider {
			    name: su-SOAP-archiveService-provide;
			}
		
			instance of SU-SOAP-ActivitiIntegrationConsumer {
			    name: su-SOAP-activitiIntegrationService-consume;
			}
		}
		
		# As SL are not supported by Roboconf because:
	    #   - a SL export no configuration parameter
	    #   - Roboconf is not able to manage local dependency
	    # we work with only one instance of Petals SE Activiti over all Petals containers
	    instance of PetalsSEActiviti {
		    name: petals-se-activiti;
		    
		    instance of SU-Activiti-VacationRequest {
			    name: su-activiti-vacationService-provide;
			}
		}
	}
}

instance of PetalsContainer-VM {
	name: container-vm-1;

	instance of PetalsContainer {
		name: container-node;

		PetalsContainerTemplate.containerId: container-node-1;
		
		instance of PetalsBCSoap {
		    name: petals-bc-soap;
		    
		    instance of SU-SOAP-VacationServiceConsumer {
			    name: su-SOAP-vacationService-consume;
			}
		
			instance of SU-SOAP-NotificationServiceProvider {
			    name: su-SOAP-notifyVacationService-provide;
			}
		
			instance of SU-SOAP-ArchivingServiceProvider {
			    name: su-SOAP-archiveService-provide;
			}
		
			instance of SU-SOAP-ActivitiIntegrationConsumer {
			    name: su-SOAP-activitiIntegrationService-consume;
			}
		}
	}
}
