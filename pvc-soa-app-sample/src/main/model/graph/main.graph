#
# Copyright (c) 2015-2016 Linagora
#
# This program/library is free software: you can redistribute it and/or modify
# it under the terms of the New BSD License (3-clause license).
#
# This program/library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the New BSD License (3-clause license)
# for more details.
#
# You should have received a copy of the New BSD License (3-clause license)
# along with this program/library; If not, see <http://directory.fsf.org/wiki/License:BSD_3Clause/>
# for the New BSD License (3-clause license).
#
import petals-pvc/main.graph;

# TODO: Should be mutualized with the load-balancer of haproxy-tomcat
HAProxy_VM {
	installer: target;
	children: HAProxy;
}

# TODO: Should be mutualized with the load-balancer of haproxy-tomcat
HAProxy {
	installer: script;
	imports: PetalsBCSoapConsumer.httpPort (optional), PetalsBCSoapConsumer.ip (optional);
	exports: ip, httpPort = 80, statsPort = 8080;
}

PetalsBCSoapConsumer {
    extends: PetalsBC;
    exports: httpPort = 8084, ip;
}

PetalsBCSoapProvider {
    extends: PetalsBC;
    exports: httpPort = 8084, ip;
}

PostgreSQL-VM {
    installer: target;
	children: PostgreSQLServer;
}

PostgreSQLServer {
    installer: script;
	children: ActivitiPgSQLDatabase;
}

ActivitiPgSQLDatabase {
	installer: script;
	exports: ip, databaseName = database-name, databaseUser = database-user, databasePwd = database-pwd;
}

PetalsSLPostgreSQL {
	extends: PetalsSL;
}

PetalsSEActiviti {
    extends: PetalsSE;
    exports: engineEnableJobExecutor = true, jdbcDriver = org.postgresql.Driver, jdbcUrl = jdbc:postgresql://${ActivitiPgSQLDatabase.ip}/${ActivitiPgSQLDatabase.databaseName}, jdbcUsername = ${ActivitiPgSQLDatabase.databaseUser}, jdbcPassword = ${ActivitiPgSQLDatabase.databasePwd};
    # See comment on PetalsSL
	imports: PetalsSLPostgreSQL.present, ActivitiPgSQLDatabase.*;
}

SU-Activiti-VacationRequest {
    extends: PetalsSU;
}

SU-SOAP-VacationServiceConsumer {
    extends: PetalsSU;
}

SU-SOAP-NotificationServiceConsumer {
    extends: PetalsSU;
}

SU-SOAP-NotificationServiceProvider {
    extends: PetalsSU;
    
    exports: notifyService.url = http://${TomcatCluster.lb-ip}:${TomcatCluster.lb-port}/samples-SOAP-services/services/notifyVacationService;
    imports: external TomcatCluster.lb-ip, external TomcatCluster.lb-port;
}

SU-SOAP-ArchivingServiceConsumer {
    extends: PetalsSU;
}

SU-SOAP-ArchivingServiceProvider {
    extends: PetalsSU;
    
    exports: archiveService.url = http://${TomcatCluster.lb-ip}:${TomcatCluster.lb-port}/samples-SOAP-services/services/archiveService;
    imports: external TomcatCluster.lb-ip, external TomcatCluster.lb-port;
}

SU-SOAP-ActivitiIntegrationConsumer {
    extends: PetalsSU;
}